float fill_tetrahedron ( int num )
  {      
        float Vsm ;
        Vsm = ( sqrt( 2 ) * pow( num , 3 ) ) / 12 ; 
        float Vliters ; 
        Vliters = Vsm / 1000 ; 
        return Vliters ;
  }
   int tetrahedron_filled ( int arr[] , int Liters )
{         
    float a , b , c ;     
    a = fill_tetrahedron ( *( arr ) ) ; 
    b = fill_tetrahedron ( *( arr + 1 ) ) ;
    c = fill_tetrahedron ( *( arr + 2 ) ) ;

    
    if ( ( a > Liters ) && ( b > Liters ) && ( c > Liters ) )
          { return 0 ; 
          }
    if ( ( a <= Liters ) && ( b > Liters ) && ( c > Liters ) )
          { return 1 ; 
          }      
    if ( ( a > Liters ) && ( b <= Liters ) && ( c > Liters ) )
          { return 1 ; 
          }      
    if ( ( a > Liters ) && ( b > Liters ) && ( c <= Liters ) )
          { return 1 ; 
          }      
    if ( ( a <= Liters ) && ( b <=Liters ) && ( c > Liters ) )
          { 
            if ( ( a + b ) <= Liters ) 
              { return 2 ; 
              }
               else 
              { return 1 ; 
              }
          }          
    if ( ( a <= Liters ) && ( b > Liters ) && ( c <= Liters ) )
          { 
            if ( ( a + c ) <= Liters )
              { return 2 ; 
              }
               else 
               return 1 ; 
          }    
    if ( ( a > Liters ) && ( b <= Liters ) && ( c <= Liters ) )
          { 
            if ( ( b + c ) <= Liters ) 
              { return 2 ; 
              }
               else 
               return 1 ; 
          }            
    if ( ( a <= Liters ) && ( b <= Liters ) && ( c <= Liters ) )
          { 
            if (( a + b + c ) < Liters)
             { return 3 ; 
             }
            else if ( ( a+b) <= Liters || ( a + c ) <= Liters || ( b + c ) <= Liters )
              return 2 ; 
          
          }      
  
}
